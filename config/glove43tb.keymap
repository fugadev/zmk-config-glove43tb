#define ZMK_POINTING_DEFAULT_SCRL_VAL 150

#include <behaviors/rgbled_widget.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&lt { quick-tap-ms = <200>; };

&mt {
    quick-tap-ms = <200>;
    flavor = "balanced";
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

&mmv {
    delay-ms = <20>;
    trigger-period-ms = <5>;
    time-to-max-speed-ms = <100>;
    acceleration-exponent = <2>;
};

&msc {
    delay-ms = <3>;
    trigger-period-ms = <3>;
    time-to-max-speed-ms = <100>;
    acceleration-exponent = <0>;
};

/ {
    input_processors {
        zip_wheel_scaler: zip_wheel_scaler {
            compatible = "zmk,input-processor-scaler";
            #input-processor-cells = <2>;
            type = <INPUT_EV_REL>;
            codes = <INPUT_REL_WHEEL>;
            track-remainders;
        };
    };
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        lst: lst {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&kp LSHIFT &macro_param_1to1>,
                <&macro_tap>,
                <&kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&kp LSHIFT>;

            label = "lst";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        sensor_rotate_kp: sensor_rotate_kp {
            compatible = "zmk,behavior-sensor-rotate-var";
            #sensor-binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };

        mouse_wheel_scroll: mouse_wheel_scroll {
            compatible = "zmk,behavior-sensor-rotate-var";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R                        &kp T                                                          &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A             &kp S         &kp D         &lt 4 F                      &kp G        &kp LS(LG(S))                    &kp MINUS        &kp H        &kp J  &kp K      &lt 5 L  &lt 4 LEFT_BRACKET
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V                        &kp B        &kp COLON                        &kp SEMICOLON    &kp N        &kp M  &kp COMMA  &kp DOT  &kp MINUS
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &lt_to_layer_0 6 LANGUAGE_2  &lt 2 SPACE  &lt_to_layer_0 3 LANGUAGE_1      &lt 3 BACKSPACE  &lt 2 ENTER                             &kp RIGHT_SHIFT
            >;

            sensor-bindings = <&mouse_wheel_scroll SCRL_DOWN SCRL_UP>;
        };

        NONE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        NUM {
            bindings = <
&kp ESC    &lst AMPERSAND    &lst ASTERISK  &lst LEFT_PARENTHESIS  &kp RIGHT_BRACKET                      &kp SEMI          &kp N7  &kp N8  &kp N9  &kp KP_SLASH
&kp TAB    &lst DLLR         &lst PERCENT   &lst CARET             &kp BACKSLASH      &trans      &trans  &kp SINGLE_QUOTE  &kp N4  &kp N5  &kp N6  &kp KP_ASTERISK
&kp LSHFT  &lst EXCLAMATION  &lst AT        &lst HASH              &kp FSLH           &trans      &trans  &lst UNDER        &kp N1  &kp N2  &kp N3  &kp KP_MINUS
&kp LCTRL  &kp LGUI          &kp LALT       &trans                 &trans             &trans      &trans  &kp N0                                    &kp KP_PLUS
            >;
        };

        FUNCTION {
            bindings = <
&kp ESC         &kp F9    &kp F10   &kp F11  &kp F12                      &trans       &trans         &kp UP    &trans     &kp INTERNATIONAL_3
&kp TAB         &kp F5    &kp F6    &kp F7   &kp F8   &trans      &trans  &trans       &kp LEFT       &kp DOWN  &kp RIGHT  &kp EQUAL
&kp LEFT_SHIFT  &kp F1    &kp F2    &kp F3   &kp F4   &trans      &trans  &kp PAGE_UP  &kp PAGE_DOWN  &kp HOME  &kp END    &lst INTERNATIONAL_1
&kp LCTRL       &kp LGUI  &kp LALT  &trans   &trans   &trans      &trans  &trans                                           &lst PLUS
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB2  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                              &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        BLUETOOTH {
            bindings = <
&trans  &trans  &trans  &trans    &trans                                      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans    &trans    &trans           &kp INSERT       &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &ind_con  &ind_bat  &bootloader      &kp PRINTSCREEN  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans    &trans    &trans           &kp DEL          &trans                                                  &bt BT_CLR_ALL
            >;

            sensor-bindings = <&sensor_rotate_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };
    };
};
